trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

variables:
  buildConfig: "Release"
  ProjectName: "CodingEventsAPI"

stages:
  - stage: BuildStage
    jobs:
      - job: BuildJob
        steps:
          - task: DotNetCoreCLI@2
            displayName: "Build [config: $(buildConfig)]"
            inputs:
              command: build
              arguments: "-c $(buildConfig)"

  - stage: PublishStage
    dependsOn: BuildStage
    jobs:
      - job: LinuxPublishJob
        displayName: Create Linux Artifact
        variables:
          runtimeId: "linux-x64"
        steps:
          - task: DotNetCoreCLI@2
            displayName: "Publish [config $(buildConfig)] [runtime $(runtimeId)]"
            inputs:
              command: publish
              arguments: "-c $(buildConfig) -r $(runtimeId) -p:PublishSingleFile=true"
              projects: "**/$(ProjectName).csproj"

  - stage: DeployStage
    dependsOn: PublishStage
    variables:
      EnvName: "linux"
      VmName: "student-linux"
    jobs:
    - deployment: deploy
      displayName: Linux Deploy
      # alternatively
      # environment: "$(EnvName).$(VmName)"
      environment:
        name: linux
        resourceName: student-linux
        resourceType: VirtualMachine
      strategy:
        runOnce:
          preDeploy:
            steps:
              - script: echo "EnvName [$(EnvName)] VmName [$(VmName)]"
              - download: current
                artifact: "$(ProjectName)"
              - script: echo "downloaded artifact"
          deploy:
            steps:
              - script: echo "executing artifact at $(Pipeline.Workspace)/$(ProjectName)"
              - script: './$(Pipeline.Workspace)/$(ProjectName)'
                

