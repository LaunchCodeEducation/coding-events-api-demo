trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

variables:
  buildConfig: "Release"
  runtimeId: "linux-x64"
  ProjectName: "CodingEventsAPI"

stages:
  - stage: BuildStage
    jobs:
      - job: BuildForLinux
        displayName: Create Linux Artifact
        steps:
          - task: DotNetCoreCLI@2
            displayName: "Publish [config $(buildConfig)] [runtime $(runtimeId)]"
            inputs:
              command: publish
              arguments: "-c $(buildConfig) -r $(runtimeId) -p:PublishSingleFile=true"
              projects: "**/$(ProjectName).csproj"

  - stage: PublishStage
    dependsOn: BuildStage
    jobs:
      - job: PublishLinuxArtifact
        displayName: Publish Linux Executable Artifact
        steps:
          - script: ls -al "$(Build.ArtifactDirectory)"
          - publish: "$(Build.ArtifactDirectory)"
            artifact: "$(ProjectName)"

  - stage: DeployStage
    dependsOn: PublishStage
    variables:
      EnvName: "linux"
      VmName: "student-linux"
    jobs:
    - deployment: deploy
      displayName: Linux Deploy
      # alternatively
      # environment: "$(EnvName).$(VmName)"
      # substitution isnt working here?
      # environment:
      #   name: "$(EnvName)"
      #   resourceName: "$(VmName)"
      #   resourceType: VirtualMachine
      environment:
        name: "linux"
        resourceName: "student-linux"
        resourceType: VirtualMachine
      strategy:
        runOnce:
          preDeploy:
            steps:
              - download: current
                artifact: "$(ProjectName)"
              - script: echo "downloaded artifact"
          deploy:
            steps:
              - script: echo "executing artifact at $(Pipeline.Workspace)/$(ProjectName)"
              - script: './$(Pipeline.Workspace)/$(ProjectName)'
                

